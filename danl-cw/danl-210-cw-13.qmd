---
title: Classwork 13
subtitle: Group Operation I
date: 2025-04-27
execute: 
  eval: false
  echo: false
  warning: false
  message: false
  
from: markdown+emoji
---

```{r}
#| echo: false

reticulate::use_condaenv("/Users/bchoe/anaconda3", required = TRUE)
```



## Direction

<br>

<p align="center">
  <img src="https://bcdanl.github.io/lec_figs/cereals.png" width="700px">
</p>

<br>

The dataset ,`cereals_oatmeal.csv`,(with its pathname `https://bcdanl.github.io/data/cereals_oatmeal.csv`) is a listing of 77 popular breakfast cereals and oatmeal.


```{python}
#| echo: true
#| eval: false
cereal = pd.read_csv('https://bcdanl.github.io/data/cereals_oatmeal.csv')
```


```{r}
#| eval: true
#| echo: false
rmarkdown::paged_table(readr::read_csv('https://bcdanl.github.io/data/cereals_oatmeal.csv')
          )
```


## Question 1
Group the data by Manufacturer, and determine the number of groups and the number of cereals per group.

*Answer:*
```{python}

```

<br><br>

## Question 2 
Calculate the mean of the `Calories`, `Fiber`, and `Sugars` for every manufacturer.

*Answer:*
```{python}

```

<br><br>

## Question 3 
Create a new DataFrame that includes the maximum `Sugars` and the minimum `Fiber` per manufacturer.

*Answer:*
```{python}

```

<br><br>


## Question 4 
Add a `Normalized_Sugars` variable to the `cereal` DataFrame that standardizes each cereal's sugar content within its manufacturer group.

$$
\text{Normalized\_Sugars} = \frac{\text{Sugars} - \text{mean(Sugars)}}{\text{std(Sugars)}}
$$

This formula adjusts the sugar content of each product by subtracting the mean sugar content of its manufacturer and then dividing by the standard deviation of the sugar content within its manufacturer.

*Answer:*
```{python}

```

<br><br>



## Question 5 
Put the two highest-sugar cereals for every manufacturer in a new DataFrame.

*Answer:*
```{python}

```

<br><br>


## Question 6
- Compute the correlation between `Calories` and `Sugars` for each manufacturer.
    - `corr()` calculates the correlation between `SERIES_1` and `SERIES_2`.
```{python}
#| eval: false
#| echo: true
cereal["Calories"].corr( cereal["Sugars"] ) # returns a correlation value
cereal[["Calories", "Sugars"]].corr() # returns a DataFrame of correlation matrix
cereal[["Calories", "Sugars", "Fiber"]].corr() # returns a DataFrame of correlation matrix
```

*Answer:*
```{python}

```


<br><br>

# Discussion


<font size = "5">Welcome to our Classwork 13 Discussion Board! ðŸ‘‹ </font>


This space is designed for you to engage with your classmates about the material covered in Classwork 13.

Whether you are looking to delve deeper into the content, share insights, or have questions about the content, this is the perfect place for you.

If you have any specific questions for Byeong-Hak (**@bcdanl**) regarding the Classwork 13 materials or need clarification on any points, don't hesitate to ask here. 

Let's collaborate and learn from each other!

